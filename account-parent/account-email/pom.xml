<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- 声明父模块 -->
	<parent>
		<!-- 指定父模块的坐标 -->
		<groupId>com.juvenxu.mvnbook.account</groupId>
		<artifactId>account-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<!-- 表示父模块POM的相对路径:当项目构建时MAVEN会首先根据RELATIVEPATH检查父POM如果找不到再从本地仓库查找(默认:../pom.xml) -->
		<!-- 当父模块在本模块的上一层目录时,这是MAVEN默认能识别的父模块位置,因此不再需要配置RELATIVEPATH -->
		<relativePath>../account-parent/pom.xml</relativePath>
	</parent>

	<artifactId>account-email</artifactId>
	<name>Account Email</name>

	<properties>
		<javax.mail.version>1.4.7</javax.mail.version>
		<greenmail.version>1.3.1b</greenmail.version>
	</properties>

	<!-- 如果子模块不声明依赖的使用:即使该依赖已经在父POM的DEPENDENCYMANAGEMENT中声明了也不会产生任何实际的效果 -->
	<dependencies>
	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${javax.mail.version}</version>
		</dependency>
		
		<dependency>
			<!-- GREENMAIL是开源的邮件服务测试套件: http://www.icegreen.com/greenmail/ -->
			<groupId>com.icegreen</groupId>
			<artifactId>greenmail</artifactId>
			<version>${greenmail.version}</version>
			<!-- <scope>test</scope> -->
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
		</plugins>
	</build>
</project>
